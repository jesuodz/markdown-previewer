{"version":3,"sources":["components/Header/index.js","components/TitleHeader/index.js","components/TitleHeader/actions.js","components/TitleHeader/types.js","components/Editor/components/TextArea/index.js","components/Editor/actions.js","components/Editor/types.js","components/Editor/index.js","components/Previewer/components/Visor/index.js","components/Previewer/index.js","components/Footer/index.js","components/App.js","utils/chnToggler.js","components/TitleHeader/reducer.js","store.js","components/Editor/reducer.js","utils/placeholder.js","index.js"],"names":["AppHeader","react_default","a","createElement","className","TitleHeader","classNameTitleHeader","this","props","name","onClick","icon","Component","connect","dispatch","type","payload","TextArea","event","updatePlaceholder","target","value","localStorage","markdown","rawText","onChange","handleChange","bind","state","text","placeholder","maximized","toggle","titleHeader","editor","setItem","Editor","id","src_components_TitleHeader","components_TextArea","Visor","__html","marked","sanitize","dangerouslySetInnerHTML","compileMarkdown","previewer","Previewer","components_Visor","AppFooter","href","App","components_Header","src_components_Editor","src_components_Previewer","components_Footer","chnToggler","newNameState","rootReducer","combineReducers","arguments","length","undefined","action","Object","objectSpread","ReactDOM","render","es","store","createStore","compose","applyMiddleware","thunk","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5be47ae5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst AppHeader = () => {\r\n  return(\r\n    <div className=\"col header\">\r\n      <h1 className=\"text-center\">Markdown Previewer</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { toggleCompHeader } from './actions';\r\n\r\nimport './index.css';\r\n\r\nclass TitleHeader extends Component {\r\n  render() {\r\n    const classNameTitleHeader = \"titleheader titleheader-\" + this.props.name;\r\n    return(\r\n      <div className={classNameTitleHeader} onClick={this.props.onClick}>\r\n        <div className=\"text-wrapper\">\r\n          <h2 className=\"title text-center\">{this.props.name}</h2>\r\n        </div>\r\n        <i className={this.props.icon}></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTitleHeader.propTypes = {\r\n  icon: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n  onClick: () => {\r\n    dispatch(toggleCompHeader(props.name))\r\n  }\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(TitleHeader);\r\n","import { TOGGLE_COMP_HEADER } from './types';\r\n\r\nexport const toggleCompHeader = name => {\r\n  return {\r\n    type: TOGGLE_COMP_HEADER,\r\n    payload: name\r\n  }\r\n}\r\n","export const TOGGLE_COMP_HEADER = 'TOGGLE_COMP_HEADER';","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { updatePlaceholder } from '../../actions';\r\n\r\nclass TextArea extends Component {\r\n  handleChange(event) {\r\n    this.props.updatePlaceholder( event.target.value );\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.markdown) {\r\n      this.props.updatePlaceholder(localStorage.markdown);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <textarea className=\"editor\"\r\n        value={this.props.rawText}\r\n        onChange={this.handleChange.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nTextArea.propTypes = {\r\n  rawText: PropTypes.string.isRequired,\r\n  updatePlaceholder: PropTypes.func.isRequired,\r\n  maximized: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  rawText: state.text.placeholder,\r\n  maximized: state.toggle.titleHeader.editor\r\n});\r\n\r\nexport default connect(mapStateToProps, { updatePlaceholder })(TextArea);\r\n","import { UPDATE_PLACEHOLDER } from './types';\r\n\r\nexport const updatePlaceholder = text => {\r\n  // Set markdown text to ls\r\n  localStorage.setItem('markdown', text);\r\n\r\n  return {\r\n    type: UPDATE_PLACEHOLDER,\r\n    payload: text\r\n  }\r\n}\r\n","export const UPDATE_PLACEHOLDER = 'UPDATE_PLACEHOLDER';\r\n","import React from 'react';\r\nimport TitleHeader from '../TitleHeader';\r\nimport TextArea from './components/TextArea';\r\n\r\nimport './index.css'\r\n\r\nconst Editor = () => {\r\n  return(\r\n    <div id=\"editor\" className=\"col-md-6\">\r\n      <TitleHeader name=\"editor\"/>\r\n      <TextArea />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport marked from 'marked';\r\n\r\nclass Visor extends Component {\r\n  compileMarkdown() {\r\n    let markdown = marked(this.props.rawText, {sanitize: true})\r\n    \r\n    return {__html: markdown}\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div\r\n        className=\"previewer\"\r\n        dangerouslySetInnerHTML={this.compileMarkdown()}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nVisor.propTypes = {\r\n  rawText: PropTypes.string.isRequired,\r\n  maximized: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  rawText: state.text.placeholder,\r\n  maximized: state.toggle.titleHeader.previewer\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Visor)\r\n","import React from 'react';\r\nimport Visor from './components/Visor';\r\nimport TitleHeader from '../TitleHeader';\r\n\r\nimport './index.css';\r\n\r\nconst Previewer = () => {\r\n  return(\r\n    <div id=\"previewer\" className=\"col-md-6\">\r\n      <TitleHeader\r\n        name=\"previewer\"\r\n      />\r\n      <Visor />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Previewer;\r\n","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst AppFooter = () => {\r\n  return(\r\n    <footer className=\"col footer\">\r\n      <div className=\"text-center\">\r\n        <p>\r\n          <span>Made by</span>\r\n          <a href=\"http://jesuodz.github.io\">Jes√∫s Ordosgoitty</a>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default AppFooter;\r\n","import React from 'react';\r\n\r\nimport AppHeader from './Header';\r\nimport Editor from './Editor';\r\nimport Previewer from './Previewer';\r\nimport AppFooter from './Footer';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <AppHeader />\r\n      <div className=\"row\">\r\n        <Editor />\r\n        <Previewer />\r\n      </div>\r\n      <AppFooter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// Change toggler object\r\n\r\nconst chnToggler = (toggle, name) => {\r\n  let newNameState = !toggle[name];\r\n  toggle[name] = newNameState;\r\n\r\n  return toggle;\r\n}\r\n\r\nexport default chnToggler;\r\n","import chnToggler from '../../utils/chnToggler';\r\nimport { TOGGLE_COMP_HEADER } from './types';\r\n\r\nconst titleHeader = {\r\n  'editor': false,\r\n  'previewer': false\r\n};\r\n\r\nexport default (state = { titleHeader }, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COMP_HEADER:\r\n      return {\r\n        ...state,\r\n        titleHeader: chnToggler(titleHeader, action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  createStore,\r\n  applyMiddleware,\r\n  compose,\r\n  combineReducers\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Create root reducer\r\nimport placeholderReducer from './components/Editor/reducer';\r\nimport titleHeaderReducer from './components/TitleHeader/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  text: placeholderReducer,\r\n  toggle: titleHeaderReducer\r\n})\r\n\r\nexport default function configureStore() {\r\n  return createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(thunk),\r\n       // Apply after updating redux-devtools extension package\r\n      // applyMiddleware(thunk),\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n}\r\n","import { UPDATE_PLACEHOLDER } from './types';\r\nimport placeholder from '../../utils/placeholder';\r\n\r\nexport default (state = { placeholder }, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PLACEHOLDER:\r\n      return {\r\n        ...state,\r\n        placeholder: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const placeholder = \r\n`# Welcome to my Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHere's some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![Awesome gif w/ Text](./awesome.gif)`\r\n\r\nexport default placeholder;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store';\r\n\r\n// Import frontend, static files...\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}