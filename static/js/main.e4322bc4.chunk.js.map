{"version":3,"sources":["App.js","index.js"],"names":["Editor","props","react_default","a","createElement","id","className","App_ComponentHeader","name","onClick","toggle","icon","componentStyles","value","markdown","onChange","Previewer","dangerouslySetInnerHTML","data","ComponentHeader","AppHeader","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","placeholder","toggleEditor","togglePreviewer","bind","assertThisInitialized","handleChange","event","setState","target","__html","marked","sanitize","togEditor","togPreviewer","togEditorIcon","togPreviewerIcon","App_AppHeader","App_Editor","App_Previewer","getRawHtml","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e4322bc4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport marked from 'marked';\r\n\r\nconst Editor = (props) => {\r\n  return(\r\n    <div id=\"editor\" className=\"col-md-12\">\r\n      <ComponentHeader name={'Editor'} onClick={props.toggle} icon={props.icon}/>\r\n      <textarea id=\"editor\" className={props.componentStyles}\r\n        value={props.markdown}\r\n        onChange={props.onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Previewer = (props) => {\r\n  return(\r\n    <div id=\"previewer\" className=\"col-md-12\">\r\n      <ComponentHeader name='Previewer' onClick={props.toggle} icon={props.icon}/>\r\n      <div id=\"preview\" \r\n        className={props.componentStyles}\r\n        dangerouslySetInnerHTML={props.data}>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst ComponentHeader = (props) => {\r\n  return(\r\n    <div className=\"bar-toggle\" onClick={props.onClick}>\r\n      <div className=\"text-wrapper\">\r\n        <h2 className=\"text-center\">{props.name}</h2>\r\n      </div>\r\n      <i className={props.icon}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AppHeader = () => {\r\n  return(\r\n    <div className=\"col header\">\r\n      <h1 className=\"text-center\">Markdown Previewer</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      markdown: placeholder,\r\n      toggleEditor: true,\r\n      togglePreviewer: true\r\n    };\r\n\r\n    this.toggleEditor = this.toggleEditor.bind(this);\r\n    this.togglePreviewer = this.togglePreviewer.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      markdown: event.target.value,\r\n    });\r\n  }\r\n\r\n  toggleEditor() {\r\n    this.setState( state => ({\r\n      toggleEditor: !state.toggleEditor\r\n    }));\r\n  }\r\n\r\n  togglePreviewer() {\r\n    this.setState( state => ({\r\n      togglePreviewer: !state.togglePreviewer\r\n    }));\r\n  }\r\n  \r\n  getRawHtml() {\r\n    let rawHtml = marked(this.state.markdown, {sanitize: true});\r\n    return { __html: rawHtml };\r\n  }\r\n\r\n  render() {\r\n    const togEditor = \r\n      this.state.toggleEditor ? 'editor' : 'editor maximized';\r\n    const togPreviewer = \r\n      this.state.togglePreviewer ? 'previewer' : 'previewer maximized';\r\n    const togEditorIcon =\r\n      this.state.toggleEditor ? 'fa fa-chevron-down' : 'fa fa-minus';\r\n    const togPreviewerIcon =\r\n      this.state.togglePreviewer ? 'fa fa-chevron-down' : 'fa fa-minus';\r\n\r\n    return (\r\n      <div className=\"container h-100\">\r\n        <AppHeader />\r\n        <div className=\"row h-75 align-items-center\">\r\n          <Editor\r\n            markdown={this.state.markdown}\r\n            onChange={this.handleChange}\r\n            toggle={this.toggleEditor}\r\n            componentStyles={togEditor}\r\n            icon={togEditorIcon}\r\n          />\r\n          <Previewer \r\n            data={this.getRawHtml()} \r\n            toggle={this.togglePreviewer}\r\n            componentStyles={togPreviewer}\r\n            icon={togPreviewerIcon}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst placeholder = \r\n`# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHere's some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)`\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}